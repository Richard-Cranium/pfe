#ifndef PFE_MEMORY_SUB_H
#define PFE_MEMORY_SUB_H 20091022
/* generated by make-header.py from ../../c/memory-sub.c */

#include <pfe/pfe-sub.h>

/**
 * -- Memory Allocation Words
 *
 *  Copyright (C) Tektronix, Inc. 1998 - 2001.
 *  Copyright (C) 2005 - 2008 Guido U. Draheim <guidod@gmx.de>
 *
 *  @see     GNU LGPL
 *  @author  Guido U. Draheim            (modified by $Author: guidod $)
 *  @version $Revision: 1.3 $
 *     (modified $Date: 2008-04-20 04:46:30 $)
 *
 *  @description
 *     memory allocation interfaces to the surrounding OS.
 */

#ifdef __cplusplus
extern "C" {
#endif




/** ALLOC - allocate memory, die when failed */
extern void * p4_xcalloc (int n_elem, size_t size); /*{*/

/** ALLOC - allocate memory, with debug info */
extern void * p4_calloc (int n_elem, size_t size); /*{*/

/** ALLOC - allocate memory, throw when failed */
extern void * p4_xalloc (size_t size); /*{*/

/** FREE - allocated memory is released */
extern void p4_xfree (void* p); /*{*/

/**
 * helper routine to allocate a portion of the dictionary
 * especially for some stack-areas of the forth system
 * ... just decreases PFE.dictlimit, returns 0 if impossible.
 */
extern void* p4_dict_allocate (int items, int size, int align, void** lower, void** upper); /*{*/

/** virtual allocation via mmap(2) */
extern int p4_mmap_creat(char* name, void* addr, long size); /*{*/

/** free virtual allocation via mmap(2) */
extern void p4_mmap_close(int fd, void* addr, long size); /*{*/

#ifdef __cplusplus
} /* extern "C" */
#endif


#endif
